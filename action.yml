name: "Notify Slack"
description: "does what the name says. it notfies slack when a build fails."
author: "514 Labs"

inputs:
  slack-bot-token:
    description: 'Slack Bot Token for user lookup'
    required: true
  slack-webhook-url:
    description: 'Slack Webhook URL for notifications'
    required: true

runs:
  using: "composite"
  steps:
    - name: Get Slack User ID
      id: slack-user
      uses: actions/github-script@v7
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
      with:
        script: |
          try {
            const response = await fetch(`https://slack.com/api/users.lookupByEmail?email=${encodeURIComponent(process.env.AUTHOR_EMAIL)}`, {
              method: 'GET',
              headers: {
                'Authorization': `Bearer ${process.env.SLACK_BOT_TOKEN}`,
                'Content-Type': 'application/json'
              }
            });
            const data = await response.json();
            console.log('Slack API response:', data);
            if (data.ok && data.user) {
              return data.user.id;
            }
            return process.env.AUTHOR_EMAIL;
          } catch (error) {
            console.error('Error looking up Slack user:', error);
            return process.env.AUTHOR_EMAIL;
          }
        result-encoding: string

    - name: Construct Slack payload
      id: slack-payload
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const workflowName = context.workflow;
          const message = `ðŸš¨ ${workflowName} failed!

          Workflow: ${workflowName}
          Repo: ${context.repo.owner}/${context.repo.repo}
          Branch: ${context.ref.replace('refs/heads/', '')}
          Commit: ${context.sha}
          Author: <@${process.env.SLACK_USER_ID}>
          See: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

          return JSON.stringify({ text: message }, null, 2);
      env:
        SLACK_USER_ID: ${{ steps.slack-user.outputs.result }}

    - name: Notify Slack on failure
      uses: slackapi/slack-github-action@v1.25.0
      with:
        payload: ${{ steps.slack-payload.outputs.result }}
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
